using System;

public class MathOperations<T> where T : struct, IComparable, IConvertible, IEquatable<T>
{
    public T Add(T a, T b)
    {
        return (dynamic)a + (dynamic)b;
    }

    public T Subtract(T a, T b)
    {
        return (dynamic)a - (dynamic)b;
    }

    public T Multiply(T a, T b)
    {
        return (dynamic)a * (dynamic)b;
    }

    public T Divide(T a, T b)
    {
        if ((dynamic)b == 0)
        {
            throw new ArgumentException("Divisor cannot be zero.");
        }
        return (dynamic)a / (dynamic)b;
    }
}

class Program
{
    static void Main()
    {
        var mathOperationsInt = new MathOperations<int>();

        try
        {
            Console.WriteLine("Enter first integer:");
            int a = int.Parse(Console.ReadLine());
            Console.WriteLine("Enter second integer:");
            int b = int.Parse(Console.ReadLine());

            Console.WriteLine("Sum: " + mathOperationsInt.Add(a, b));
            Console.WriteLine("Difference: " + mathOperationsInt.Subtract(a, b));
            Console.WriteLine("Product: " + mathOperationsInt.Multiply(a, b));
            Console.WriteLine("Quotient: " + mathOperationsInt.Divide(a, b));
        }
        catch (FormatException ex)
        {
            Console.WriteLine($"Error: Input was not a valid integer. {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error in integer operations: {ex.Message}");
        }

        var mathOperationsDouble = new MathOperations<double>();

        try
        {
            Console.WriteLine("Enter first double:");
            double c = double.Parse(Console.ReadLine());
            Console.WriteLine("Enter second double:");
            double d = double.Parse(Console.ReadLine());

            Console.WriteLine("Sum: " + mathOperationsDouble.Add(c, d));
            Console.WriteLine("Difference: " + mathOperationsDouble.Subtract(c, d));
            Console.WriteLine("Product: " + mathOperationsDouble.Multiply(c, d));
            Console.WriteLine("Quotient: " + mathOperationsDouble.Divide(c, d));
        }
        catch (FormatException ex)
        {
            Console.WriteLine($"Error: Input was not a valid double. {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error in double operations: {ex.Message}");
        }
    }
}
